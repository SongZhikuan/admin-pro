import{g,aj as u,aG as r,i as f,J as O,l as o,k as _,b9 as b,G as S,o as $,e as h,w,s as v,t as j,u as c,v as N,x,_ as C,y as E,L as K}from"./index-86457adf.js";const k=g({tag:{type:String,default:"div"},span:{type:Number,default:24},offset:{type:Number,default:0},pull:{type:Number,default:0},push:{type:Number,default:0},xs:{type:u([Number,Object]),default:()=>r({})},sm:{type:u([Number,Object]),default:()=>r({})},md:{type:u([Number,Object]),default:()=>r({})},lg:{type:u([Number,Object]),default:()=>r({})},xl:{type:u([Number,Object]),default:()=>r({})}}),R=Symbol("rowContextKey"),L=f({name:"ElCol"}),P=f({...L,props:k,setup(p){const e=p,{gutter:l}=O(R,{gutter:o(()=>0)}),a=_("col"),i=o(()=>{const t={};return l.value&&(t.paddingLeft=t.paddingRight=`${l.value/2}px`),t}),d=o(()=>{const t=[];return["span","offset","pull","push"].forEach(s=>{const n=e[s];b(n)&&(s==="span"?t.push(a.b(`${e[s]}`)):n>0&&t.push(a.b(`${s}-${e[s]}`)))}),["xs","sm","md","lg","xl"].forEach(s=>{b(e[s])?t.push(a.b(`${s}-${e[s]}`)):S(e[s])&&Object.entries(e[s]).forEach(([n,m])=>{t.push(n!=="span"?a.b(`${s}-${n}-${m}`):a.b(`${s}-${m}`))})}),l.value&&t.push(a.is("guttered")),[a.b(),t]});return(t,y)=>($(),h(x(t.tag),{class:j(c(d)),style:N(c(i))},{default:w(()=>[v(t.$slots,"default")]),_:3},8,["class","style"]))}});var B=C(P,[["__file","col.vue"]]);const H=E(B),G=["start","center","end","space-around","space-between","space-evenly"],J=["top","middle","bottom"],A=g({tag:{type:String,default:"div"},gutter:{type:Number,default:0},justify:{type:String,values:G,default:"start"},align:{type:String,values:J}}),D=f({name:"ElRow"}),I=f({...D,props:A,setup(p){const e=p,l=_("row"),a=o(()=>e.gutter);K(R,{gutter:a});const i=o(()=>{const t={};return e.gutter&&(t.marginRight=t.marginLeft=`-${e.gutter/2}px`),t}),d=o(()=>[l.b(),l.is(`justify-${e.justify}`,e.justify!=="start"),l.is(`align-${e.align}`,!!e.align)]);return(t,y)=>($(),h(x(t.tag),{class:j(c(d)),style:N(c(i))},{default:w(()=>[v(t.$slots,"default")]),_:3},8,["class","style"]))}});var T=C(I,[["__file","row.vue"]]);const M=E(T);export{H as E,M as a};
